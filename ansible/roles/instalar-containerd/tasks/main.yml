---
# tasks file for instalar-containerd
- name: "Preparar instalação containerd"
  become: true
  apt: 
    name: ["ca-certificates", "curl", "gnupg"]
- name: "Instalar keyrings docker"
  become: true
  vars:
      commands:
        - install -m 0755 -d /etc/apt/keyrings
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --yes --dearmor -o /etc/apt/keyrings/docker.gpg
        - chmod a+r /etc/apt/keyrings/docker.gpg
  shell:
    cmd: "{{ item }}"
  loop: "{{ commands }}"
- name: "Prepara repositório containerd"
  become: true
  shell: >-
    echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] 
    https://download.docker.com/linux/ubuntu "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable"
    | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
- name: "Instalar containerd"    
  become: true
  apt:
    name: containerd.io
    state: present
    update_cache: true
- name: "Configurações k8s"    
  become: true
  ansible.builtin.shell:
    cmd: |
      cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
      overlay
      br_netfilter
      EOF
- name: "modprobe"
  become: true
  ansible.builtin.shell:
    cmd: modprobe overlay && modprobe br_netfilter
- name: "Configurações k8s network"    
  become: true
  ansible.builtin.shell:
    cmd: |
      cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1
      EOF 
  notify: 
    -  Apply sysctl params without reboot
- name: Configurar cgroup driver para usar systemd
  become: true
  ansible.builtin.shell:
    cmd: |
      cat <<EOF | sudo tee /etc/containerd/config.toml
      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
          SystemdCgroup = true
      EOF
  notify:
    - Reiniciar containerd